#!/usr/bin/python

# Correa, C.A., Marulanda, G., Garces, A. Optimal Microgrid Management in the
# Colombian Energy Market with Demand Response and Energy Storage
# Microgrid simulation
import datetime
from helperFunctions import *

# Date for energy price, load power and photovoltaic power data
loadDate = datetime.date(2017,3,1)

# Unit energy cost
unitCost = 550

# Typical load curve
typicalLoadCurve = [60,65,70,70,75,80,80,80,80,80,75,75,75,80,85,90,90,95,100,100,95,85,80,65]

# Loads supplied and consumed power data from csv file:
# loadPower: power consumed by the loads
# pvPower: power generated by the photovoltaic system
# averageNetLoadPower: average net load Power
# averageYearLoadPower: average year load power
loadPower = readExampleData("dem")
pvPower = readExampleData("PV")
# priceCreg = readExampleData("Cbolsa")
# loadPower, pvPower, averageNetLoadPower, averageYearLoadPower = readLoadPVData(loadDate,'59')

# Base case: System without battery storage or photovoltaic generation
priceFixed = [unitCost for i in range(24)]
priceCreg  = computeCregPrice(typicalLoadCurve, unitCost)
totalCostFixed = sum([priceFixed[t] * loadPower[t] for t in range(24)])
totalCostCreg  = sum([priceCreg[t] * loadPower[t] for t in range(24)])

# Scenario 1: System with battery storage and photovoltaic generation but no demand response scheme
optimSolFound1, Pd1, Pch1, Pdch1, Es1, totalCost1 = optimalSolutionScenario1(loadPower, pvPower, priceCreg)
if optimSolFound1:
    exportResults("scenario1.csv",Pch1, Pdch1, Pd1)
    prepareFigureScenario1(loadDate, totalCost1, priceCreg, pvPower, loadPower, Pd1, Pch1, Pdch1, Es1, typicalLoadCurve)

# Scenario 2: System with battery storage and photovoltaic generation and demand response scheme
optimSolFound2, Pd2, Pch2, Pdch2, Es2, Psh, Pcut, totalCost2 = optimalSolutionScenario2(loadPower, pvPower, priceCreg)
if optimSolFound2:
    exportResults("scenario2.csv",Pch2, Pdch2, Pd2)
    prepareFigureScenario2(loadDate, totalCost2, priceCreg, pvPower, loadPower, Pd2, Pch2, Pdch2, Es2, Psh, Pcut, typicalLoadCurve)

# Selects the type of energy price computation
print(f"Base case  - Total cost: ${totalCostCreg}")
print(f"Scenario 1 - Total cost: ${totalCost1}")
print(f"Scenario 2 - Total cost: ${totalCost2}")